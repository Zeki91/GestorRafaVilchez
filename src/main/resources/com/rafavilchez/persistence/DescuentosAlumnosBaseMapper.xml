<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rafavilchez.persistence.DescuentosAlumnosBaseMapper" >
  <resultMap id="BaseResultMap" type="com.rafavilchez.model.DescuentosAlumnosBase" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="idDescuento" property="idDescuento" jdbcType="INTEGER" />
    <result column="idAsignatura" property="idAsignatura" jdbcType="INTEGER" />
    <result column="idAlumno" property="idAlumno" jdbcType="INTEGER" />
    <result column="activo" property="activo" jdbcType="BIT" />
    <result column="cantidad" property="cantidad" jdbcType="REAL" />
    <result column="porcentaje" property="porcentaje" jdbcType="REAL" />
    <result column="referidoPor" property="referidoPor" jdbcType="INTEGER" />
    <result column="refiereA" property="refiereA" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, idDescuento, idAsignatura, idAlumno, activo, cantidad, porcentaje, referidoPor, 
    refiereA
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rafavilchez.model.DescuentosAlumnosBaseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from descuentos_alumnos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from descuentos_alumnos
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from descuentos_alumnos
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rafavilchez.model.DescuentosAlumnosBaseExample" >
    delete from descuentos_alumnos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rafavilchez.model.DescuentosAlumnosBase" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into descuentos_alumnos (idDescuento, idAsignatura, idAlumno, 
      activo, cantidad, porcentaje, 
      referidoPor, refiereA)
    values (#{idDescuento,jdbcType=INTEGER}, #{idAsignatura,jdbcType=INTEGER}, #{idAlumno,jdbcType=INTEGER}, 
      #{activo,jdbcType=BIT}, #{cantidad,jdbcType=REAL}, #{porcentaje,jdbcType=REAL}, 
      #{referidoPor,jdbcType=INTEGER}, #{refiereA,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rafavilchez.model.DescuentosAlumnosBase" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into descuentos_alumnos
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idDescuento != null" >
        idDescuento,
      </if>
      <if test="idAsignatura != null" >
        idAsignatura,
      </if>
      <if test="idAlumno != null" >
        idAlumno,
      </if>
      <if test="activo != null" >
        activo,
      </if>
      <if test="cantidad != null" >
        cantidad,
      </if>
      <if test="porcentaje != null" >
        porcentaje,
      </if>
      <if test="referidoPor != null" >
        referidoPor,
      </if>
      <if test="refiereA != null" >
        refiereA,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idDescuento != null" >
        #{idDescuento,jdbcType=INTEGER},
      </if>
      <if test="idAsignatura != null" >
        #{idAsignatura,jdbcType=INTEGER},
      </if>
      <if test="idAlumno != null" >
        #{idAlumno,jdbcType=INTEGER},
      </if>
      <if test="activo != null" >
        #{activo,jdbcType=BIT},
      </if>
      <if test="cantidad != null" >
        #{cantidad,jdbcType=REAL},
      </if>
      <if test="porcentaje != null" >
        #{porcentaje,jdbcType=REAL},
      </if>
      <if test="referidoPor != null" >
        #{referidoPor,jdbcType=INTEGER},
      </if>
      <if test="refiereA != null" >
        #{refiereA,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rafavilchez.model.DescuentosAlumnosBaseExample" resultType="java.lang.Integer" >
    select count(*) from descuentos_alumnos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update descuentos_alumnos
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.idDescuento != null" >
        idDescuento = #{record.idDescuento,jdbcType=INTEGER},
      </if>
      <if test="record.idAsignatura != null" >
        idAsignatura = #{record.idAsignatura,jdbcType=INTEGER},
      </if>
      <if test="record.idAlumno != null" >
        idAlumno = #{record.idAlumno,jdbcType=INTEGER},
      </if>
      <if test="record.activo != null" >
        activo = #{record.activo,jdbcType=BIT},
      </if>
      <if test="record.cantidad != null" >
        cantidad = #{record.cantidad,jdbcType=REAL},
      </if>
      <if test="record.porcentaje != null" >
        porcentaje = #{record.porcentaje,jdbcType=REAL},
      </if>
      <if test="record.referidoPor != null" >
        referidoPor = #{record.referidoPor,jdbcType=INTEGER},
      </if>
      <if test="record.refiereA != null" >
        refiereA = #{record.refiereA,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update descuentos_alumnos
    set id = #{record.id,jdbcType=INTEGER},
      idDescuento = #{record.idDescuento,jdbcType=INTEGER},
      idAsignatura = #{record.idAsignatura,jdbcType=INTEGER},
      idAlumno = #{record.idAlumno,jdbcType=INTEGER},
      activo = #{record.activo,jdbcType=BIT},
      cantidad = #{record.cantidad,jdbcType=REAL},
      porcentaje = #{record.porcentaje,jdbcType=REAL},
      referidoPor = #{record.referidoPor,jdbcType=INTEGER},
      refiereA = #{record.refiereA,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rafavilchez.model.DescuentosAlumnosBase" >
    update descuentos_alumnos
    <set >
      <if test="idDescuento != null" >
        idDescuento = #{idDescuento,jdbcType=INTEGER},
      </if>
      <if test="idAsignatura != null" >
        idAsignatura = #{idAsignatura,jdbcType=INTEGER},
      </if>
      <if test="idAlumno != null" >
        idAlumno = #{idAlumno,jdbcType=INTEGER},
      </if>
      <if test="activo != null" >
        activo = #{activo,jdbcType=BIT},
      </if>
      <if test="cantidad != null" >
        cantidad = #{cantidad,jdbcType=REAL},
      </if>
      <if test="porcentaje != null" >
        porcentaje = #{porcentaje,jdbcType=REAL},
      </if>
      <if test="referidoPor != null" >
        referidoPor = #{referidoPor,jdbcType=INTEGER},
      </if>
      <if test="refiereA != null" >
        refiereA = #{refiereA,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rafavilchez.model.DescuentosAlumnosBase" >
    update descuentos_alumnos
    set idDescuento = #{idDescuento,jdbcType=INTEGER},
      idAsignatura = #{idAsignatura,jdbcType=INTEGER},
      idAlumno = #{idAlumno,jdbcType=INTEGER},
      activo = #{activo,jdbcType=BIT},
      cantidad = #{cantidad,jdbcType=REAL},
      porcentaje = #{porcentaje,jdbcType=REAL},
      referidoPor = #{referidoPor,jdbcType=INTEGER},
      refiereA = #{refiereA,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>