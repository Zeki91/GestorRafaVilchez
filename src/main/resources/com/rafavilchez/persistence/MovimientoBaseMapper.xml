<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rafavilchez.persistence.MovimientoBaseMapper" >
  <resultMap id="BaseResultMap" type="com.rafavilchez.model.MovimientoBase" >
    <id column="idMovimiento" property="idMovimiento" jdbcType="INTEGER" />
    <result column="tipo" property="tipo" jdbcType="VARCHAR" />
    <result column="concepto" property="concepto" jdbcType="VARCHAR" />
    <result column="descripción" property="descripción" jdbcType="VARCHAR" />
    <result column="fecha" property="fecha" jdbcType="DATE" />
    <result column="importe" property="importe" jdbcType="REAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    idMovimiento, tipo, concepto, descripción, fecha, importe
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rafavilchez.model.MovimientoBaseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from movimiento
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from movimiento
    where idMovimiento = #{idMovimiento,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from movimiento
    where idMovimiento = #{idMovimiento,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rafavilchez.model.MovimientoBaseExample" >
    delete from movimiento
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rafavilchez.model.MovimientoBase" >
    <selectKey resultType="java.lang.Integer" keyProperty="idMovimiento" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into movimiento (tipo, concepto, descripción, 
      fecha, importe)
    values (#{tipo,jdbcType=VARCHAR}, #{concepto,jdbcType=VARCHAR}, #{descripción,jdbcType=VARCHAR}, 
      #{fecha,jdbcType=DATE}, #{importe,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.rafavilchez.model.MovimientoBase" >
    <selectKey resultType="java.lang.Integer" keyProperty="idMovimiento" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into movimiento
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tipo != null" >
        tipo,
      </if>
      <if test="concepto != null" >
        concepto,
      </if>
      <if test="descripción != null" >
        descripción,
      </if>
      <if test="fecha != null" >
        fecha,
      </if>
      <if test="importe != null" >
        importe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tipo != null" >
        #{tipo,jdbcType=VARCHAR},
      </if>
      <if test="concepto != null" >
        #{concepto,jdbcType=VARCHAR},
      </if>
      <if test="descripción != null" >
        #{descripción,jdbcType=VARCHAR},
      </if>
      <if test="fecha != null" >
        #{fecha,jdbcType=DATE},
      </if>
      <if test="importe != null" >
        #{importe,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rafavilchez.model.MovimientoBaseExample" resultType="java.lang.Integer" >
    select count(*) from movimiento
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update movimiento
    <set >
      <if test="record.idMovimiento != null" >
        idMovimiento = #{record.idMovimiento,jdbcType=INTEGER},
      </if>
      <if test="record.tipo != null" >
        tipo = #{record.tipo,jdbcType=VARCHAR},
      </if>
      <if test="record.concepto != null" >
        concepto = #{record.concepto,jdbcType=VARCHAR},
      </if>
      <if test="record.descripción != null" >
        descripción = #{record.descripción,jdbcType=VARCHAR},
      </if>
      <if test="record.fecha != null" >
        fecha = #{record.fecha,jdbcType=DATE},
      </if>
      <if test="record.importe != null" >
        importe = #{record.importe,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update movimiento
    set idMovimiento = #{record.idMovimiento,jdbcType=INTEGER},
      tipo = #{record.tipo,jdbcType=VARCHAR},
      concepto = #{record.concepto,jdbcType=VARCHAR},
      descripción = #{record.descripción,jdbcType=VARCHAR},
      fecha = #{record.fecha,jdbcType=DATE},
      importe = #{record.importe,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rafavilchez.model.MovimientoBase" >
    update movimiento
    <set >
      <if test="tipo != null" >
        tipo = #{tipo,jdbcType=VARCHAR},
      </if>
      <if test="concepto != null" >
        concepto = #{concepto,jdbcType=VARCHAR},
      </if>
      <if test="descripción != null" >
        descripción = #{descripción,jdbcType=VARCHAR},
      </if>
      <if test="fecha != null" >
        fecha = #{fecha,jdbcType=DATE},
      </if>
      <if test="importe != null" >
        importe = #{importe,jdbcType=REAL},
      </if>
    </set>
    where idMovimiento = #{idMovimiento,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rafavilchez.model.MovimientoBase" >
    update movimiento
    set tipo = #{tipo,jdbcType=VARCHAR},
      concepto = #{concepto,jdbcType=VARCHAR},
      descripción = #{descripción,jdbcType=VARCHAR},
      fecha = #{fecha,jdbcType=DATE},
      importe = #{importe,jdbcType=REAL}
    where idMovimiento = #{idMovimiento,jdbcType=INTEGER}
  </update>
</mapper>